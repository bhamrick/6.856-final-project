%!PS-Adobe-2.0 EPSF-2.0
%%Title: gaussian_adaptive_2000_cube10_cold.eps
%%Creator: gnuplot 4.4 patchlevel 2 (Gentoo revision r1)
%%CreationDate: Fri May  6 00:50:17 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gaussian_adaptive_2000_cube10_cold.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2 (Gentoo revision r1))
  /Author (bhamrick)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May  6 00:50:17 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
stroke
462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MRshow
1.000 UL
LTb
546 739 M
63 0 V
6338 0 R
-63 0 V
stroke
462 739 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.8)]
] -46.7 MRshow
1.000 UL
LTb
546 1198 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1198 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MRshow
1.000 UL
LTb
546 1657 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1657 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MRshow
1.000 UL
LTb
546 2116 M
63 0 V
6338 0 R
-63 0 V
stroke
462 2116 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
1.000 UL
LTb
546 2576 M
63 0 V
6338 0 R
-63 0 V
stroke
462 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 3035 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3035 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
546 3494 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3494 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MRshow
1.000 UL
LTb
546 3953 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3953 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MRshow
1.000 UL
LTb
546 4412 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4412 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MRshow
1.000 UL
LTb
546 4871 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MRshow
1.000 UL
LTb
546 280 M
0 63 V
0 4528 R
0 -63 V
stroke
546 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-1)]
] -46.7 MCshow
1.000 UL
LTb
1186 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1186 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.8)]
] -46.7 MCshow
1.000 UL
LTb
1826 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1826 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.6)]
] -46.7 MCshow
1.000 UL
LTb
2466 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2466 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.4)]
] -46.7 MCshow
1.000 UL
LTb
3106 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3106 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MCshow
1.000 UL
LTb
3747 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3747 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
4387 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4387 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
5027 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5027 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
5667 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5667 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
6307 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6307 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
6873 4844 Pls
6919 4852 Pls
6598 4739 Pls
6649 4723 Pls
5176 4132 Pls
1475 2235 Pls
6226 4766 Pls
6919 4831 Pls
6890 4655 Pls
6722 4816 Pls
6837 4505 Pls
6893 4860 Pls
6924 4864 Pls
6852 4855 Pls
6880 4865 Pls
6929 4777 Pls
6538 4782 Pls
6061 4247 Pls
6859 4860 Pls
6666 4742 Pls
6941 4715 Pls
6797 4752 Pls
6626 4778 Pls
6695 4758 Pls
6783 4648 Pls
6779 4718 Pls
6943 4869 Pls
4672 4711 Pls
6260 4655 Pls
6899 4847 Pls
6914 4805 Pls
6895 4833 Pls
6845 4659 Pls
2379 467 Pls
3217 3931 Pls
6941 4858 Pls
6886 4763 Pls
4303 4194 Pls
6946 4350 Pls
6868 4840 Pls
6837 4838 Pls
5980 4086 Pls
6934 4815 Pls
2633 1511 Pls
5558 3848 Pls
6923 4817 Pls
6942 4828 Pls
6716 4578 Pls
6891 4851 Pls
6181 4536 Pls
6195 4230 Pls
5058 3104 Pls
6931 4870 Pls
6904 4743 Pls
6791 4869 Pls
6917 4803 Pls
6863 4839 Pls
6731 4825 Pls
6729 4651 Pls
6927 4807 Pls
6399 4536 Pls
4341 2728 Pls
6922 4868 Pls
4751 4841 Pls
5435 4203 Pls
6877 4769 Pls
6944 4867 Pls
6792 4828 Pls
6789 4747 Pls
6760 4848 Pls
6021 4336 Pls
5287 2497 Pls
6733 4762 Pls
6945 2988 Pls
4243 4025 Pls
6025 4755 Pls
6454 4850 Pls
6793 4761 Pls
6945 4868 Pls
6939 4840 Pls
6917 4631 Pls
4800 4775 Pls
6924 4793 Pls
6859 4776 Pls
6844 4826 Pls
6651 4493 Pls
6687 3894 Pls
6946 4869 Pls
6893 4817 Pls
6908 4790 Pls
6611 4293 Pls
6486 1897 Pls
6818 4721 Pls
2036 4512 Pls
6929 4848 Pls
6560 4750 Pls
6111 4740 Pls
6572 4800 Pls
6878 4777 Pls
6762 4830 Pls
6937 4855 Pls
6165 4586 Pls
6880 4804 Pls
6942 4858 Pls
6862 4753 Pls
4128 1987 Pls
6077 3702 Pls
6910 4843 Pls
6881 4868 Pls
6809 4543 Pls
6746 4561 Pls
6850 4825 Pls
6928 4868 Pls
5929 3164 Pls
2755 4652 Pls
6927 4868 Pls
6804 3418 Pls
6780 4560 Pls
6921 4734 Pls
6707 4805 Pls
1208 3818 Pls
6119 3044 Pls
697 3311 Pls
4656 2919 Pls
1837 2940 Pls
6853 4812 Pls
873 2915 Pls
6898 4857 Pls
5486 4595 Pls
6709 4700 Pls
6552 4397 Pls
6874 4747 Pls
6700 4796 Pls
5134 2812 Pls
6462 4478 Pls
6853 3601 Pls
6483 4650 Pls
3046 2546 Pls
2926 4834 Pls
5850 966 Pls
5995 3956 Pls
6863 4754 Pls
4611 1991 Pls
6842 4714 Pls
6525 4852 Pls
6767 4854 Pls
6918 4863 Pls
4006 3534 Pls
6921 4825 Pls
1795 2798 Pls
4165 1017 Pls
6617 4605 Pls
6816 4734 Pls
5466 4636 Pls
6879 4849 Pls
5621 4625 Pls
6916 4834 Pls
5425 4282 Pls
6900 4868 Pls
4704 3131 Pls
6943 4871 Pls
6791 4693 Pls
2165 4117 Pls
5082 861 Pls
6701 4666 Pls
6910 4772 Pls
6922 4853 Pls
6029 2090 Pls
6506 4586 Pls
6107 4836 Pls
6945 4858 Pls
6944 4869 Pls
6194 4815 Pls
6921 3964 Pls
5188 4020 Pls
5256 1674 Pls
6469 3876 Pls
6923 4795 Pls
6902 4858 Pls
4434 2729 Pls
6879 4833 Pls
6827 4864 Pls
6834 3703 Pls
5443 4687 Pls
6253 1747 Pls
6130 4840 Pls
6213 4706 Pls
6932 4848 Pls
988 3163 Pls
5803 4503 Pls
4012 4194 Pls
6605 4863 Pls
6849 4800 Pls
6804 4781 Pls
6733 4731 Pls
5976 4824 Pls
6780 4603 Pls
6919 4787 Pls
6847 4850 Pls
4631 3657 Pls
6449 4616 Pls
6677 4763 Pls
6330 4723 Pls
6600 4800 Pls
5469 4336 Pls
6888 4819 Pls
6922 4810 Pls
6875 4808 Pls
6584 4532 Pls
6534 4408 Pls
6920 4868 Pls
6883 4794 Pls
1868 546 Pls
1422 4444 Pls
6940 4862 Pls
6416 4810 Pls
6458 4628 Pls
5271 920 Pls
6622 4842 Pls
6657 4678 Pls
6684 4620 Pls
6920 4781 Pls
6811 4801 Pls
6439 4652 Pls
6909 4843 Pls
6513 4313 Pls
6935 4870 Pls
3668 2632 Pls
6892 4817 Pls
6766 4867 Pls
5401 1433 Pls
6771 4677 Pls
6309 3987 Pls
6849 4709 Pls
6914 4871 Pls
6942 4834 Pls
5160 3704 Pls
6863 4841 Pls
6940 4869 Pls
5952 4825 Pls
6933 4859 Pls
4800 3419 Pls
6442 4849 Pls
5423 3539 Pls
6805 4725 Pls
4820 3606 Pls
6767 4870 Pls
6025 4471 Pls
6331 4688 Pls
6026 4182 Pls
6638 4847 Pls
5103 4837 Pls
5874 4630 Pls
6941 4855 Pls
6916 4847 Pls
6362 4286 Pls
6510 3489 Pls
6944 3770 Pls
6705 3828 Pls
6846 4708 Pls
6918 4849 Pls
6756 3519 Pls
5805 4347 Pls
5349 3791 Pls
4804 3001 Pls
6945 4764 Pls
6812 4660 Pls
6761 3537 Pls
6562 4861 Pls
6741 4756 Pls
6798 4766 Pls
6705 4781 Pls
6918 4853 Pls
6429 4560 Pls
6826 4775 Pls
6844 4658 Pls
6913 4860 Pls
5461 4667 Pls
6863 4419 Pls
6924 4852 Pls
6817 4791 Pls
4108 3176 Pls
6944 4826 Pls
6844 4787 Pls
6783 4853 Pls
6626 4830 Pls
6282 3791 Pls
6694 4826 Pls
5316 4399 Pls
6485 4848 Pls
5476 4315 Pls
6378 4152 Pls
6691 4643 Pls
6561 4617 Pls
5337 2568 Pls
6865 4809 Pls
6106 4830 Pls
5473 2880 Pls
5702 818 Pls
6926 4782 Pls
5921 4699 Pls
2331 3740 Pls
6796 4862 Pls
6940 4857 Pls
5266 2693 Pls
5800 3893 Pls
6872 4769 Pls
6927 4865 Pls
6561 3677 Pls
6395 2708 Pls
6880 4752 Pls
6798 3157 Pls
5912 4072 Pls
6753 3190 Pls
4236 4482 Pls
6933 4188 Pls
6761 4826 Pls
6234 4540 Pls
6816 4690 Pls
6945 4861 Pls
6923 4869 Pls
6682 4662 Pls
6783 4845 Pls
6430 4843 Pls
6936 4471 Pls
6937 4822 Pls
4733 3619 Pls
6436 4328 Pls
6923 4839 Pls
6943 4865 Pls
6759 1586 Pls
6337 4680 Pls
2164 2629 Pls
6487 4560 Pls
6942 4866 Pls
6943 4870 Pls
6920 4863 Pls
6803 4677 Pls
6121 4022 Pls
6817 4531 Pls
6884 4551 Pls
6779 4844 Pls
6748 4789 Pls
5334 3460 Pls
6320 4629 Pls
6885 4856 Pls
6063 4358 Pls
6446 3950 Pls
3542 3544 Pls
6854 3707 Pls
6936 4868 Pls
6871 4810 Pls
6192 4607 Pls
6925 4802 Pls
6922 4840 Pls
6858 4773 Pls
6836 4819 Pls
6836 4642 Pls
6858 4646 Pls
6700 4277 Pls
6922 4818 Pls
5554 4449 Pls
6856 4752 Pls
5714 3764 Pls
4072 979 Pls
6433 3658 Pls
6010 4870 Pls
6941 4723 Pls
6823 4838 Pls
6845 4802 Pls
6564 4762 Pls
3549 4170 Pls
6620 4833 Pls
6775 4153 Pls
6938 4628 Pls
6939 4859 Pls
6101 4041 Pls
5843 4781 Pls
6942 4871 Pls
6941 4641 Pls
6172 3696 Pls
6940 4868 Pls
6706 2522 Pls
5466 4034 Pls
6914 4833 Pls
6695 4632 Pls
6668 4843 Pls
6647 4391 Pls
6904 4770 Pls
6369 4475 Pls
6913 4488 Pls
6869 4592 Pls
6365 4738 Pls
6779 4829 Pls
6864 4705 Pls
1140 4675 Pls
6302 4604 Pls
6772 4812 Pls
5740 421 Pls
5268 4053 Pls
6854 4798 Pls
6907 4848 Pls
6780 4652 Pls
6063 4745 Pls
6935 4846 Pls
5915 4215 Pls
6815 4860 Pls
6943 4010 Pls
6590 3671 Pls
6894 4832 Pls
6939 4827 Pls
6546 4414 Pls
5981 4354 Pls
3399 864 Pls
6899 4645 Pls
6886 4345 Pls
5769 4382 Pls
6897 4821 Pls
5897 4332 Pls
6892 4866 Pls
5176 4650 Pls
3764 3737 Pls
6939 4841 Pls
6947 4868 Pls
6907 4813 Pls
6607 4845 Pls
6589 4540 Pls
6885 4795 Pls
6942 4865 Pls
6476 4658 Pls
6471 4659 Pls
6930 4841 Pls
6681 4728 Pls
6876 4816 Pls
6945 4828 Pls
5564 3503 Pls
6925 4785 Pls
6817 4396 Pls
6766 4828 Pls
6863 4420 Pls
6737 4826 Pls
6742 4528 Pls
5821 3832 Pls
3818 3118 Pls
6928 4778 Pls
2248 4418 Pls
6359 4463 Pls
6944 4870 Pls
5367 4756 Pls
5928 4768 Pls
6349 4664 Pls
6944 4865 Pls
6603 4811 Pls
6214 4581 Pls
6800 4613 Pls
6928 4827 Pls
6935 4870 Pls
5633 3970 Pls
3898 2319 Pls
6096 4600 Pls
3390 4640 Pls
6834 4843 Pls
6843 4614 Pls
6923 4821 Pls
6928 4782 Pls
6888 4824 Pls
6338 4056 Pls
6635 4520 Pls
5741 4445 Pls
6811 4827 Pls
5790 1207 Pls
6946 4870 Pls
6648 4703 Pls
6852 4742 Pls
5421 4538 Pls
5069 4500 Pls
5478 4170 Pls
6820 4836 Pls
6925 4866 Pls
6622 4845 Pls
6891 4857 Pls
6925 4850 Pls
6930 4758 Pls
6412 4286 Pls
6298 4454 Pls
6885 4855 Pls
6681 4707 Pls
6906 4731 Pls
6530 3854 Pls
6700 4811 Pls
6937 4860 Pls
6790 4124 Pls
6858 3775 Pls
6929 4857 Pls
6743 4520 Pls
6174 3381 Pls
2098 4331 Pls
6467 4454 Pls
6770 4228 Pls
6928 4856 Pls
6857 4816 Pls
6899 4823 Pls
6826 4817 Pls
6936 4871 Pls
6864 4702 Pls
6835 4820 Pls
5772 4587 Pls
6936 4861 Pls
6730 4658 Pls
1430 4631 Pls
6728 4613 Pls
5380 4774 Pls
6876 4596 Pls
6934 4785 Pls
6326 4672 Pls
6938 4867 Pls
6035 4142 Pls
6915 4855 Pls
1452 1719 Pls
6623 4821 Pls
2478 3476 Pls
6094 537 Pls
4847 4477 Pls
6933 4870 Pls
6138 4619 Pls
6418 4464 Pls
6702 4775 Pls
6788 4785 Pls
6569 4405 Pls
6781 4250 Pls
6264 2022 Pls
6917 4763 Pls
6898 4844 Pls
6886 4763 Pls
6732 4774 Pls
6649 4713 Pls
6471 4844 Pls
6826 4807 Pls
6933 4833 Pls
6554 4324 Pls
3097 1634 Pls
6356 4721 Pls
1685 653 Pls
6890 4750 Pls
6820 4802 Pls
6942 4815 Pls
6141 4670 Pls
6919 4871 Pls
4746 461 Pls
5234 4508 Pls
6553 4570 Pls
6923 4858 Pls
6639 4830 Pls
6758 4666 Pls
3518 1386 Pls
1856 825 Pls
6866 4520 Pls
6932 4733 Pls
6885 4871 Pls
6868 4857 Pls
2265 3866 Pls
6677 4679 Pls
4640 3715 Pls
6711 4811 Pls
6827 4691 Pls
6861 4826 Pls
6854 4828 Pls
6946 4870 Pls
6728 4840 Pls
6915 4810 Pls
6918 4868 Pls
6470 4164 Pls
5837 4545 Pls
5111 2863 Pls
6903 4832 Pls
6934 4854 Pls
6881 4817 Pls
2328 1260 Pls
6656 4805 Pls
5278 3366 Pls
6184 4493 Pls
6531 4673 Pls
5596 2754 Pls
6908 4836 Pls
5826 4633 Pls
4456 3761 Pls
6869 4772 Pls
5827 3422 Pls
6941 4643 Pls
6938 4864 Pls
6692 4629 Pls
6903 4864 Pls
5859 3700 Pls
6907 4513 Pls
6911 4865 Pls
6789 4562 Pls
6545 4595 Pls
6577 4521 Pls
4739 2897 Pls
6391 3634 Pls
6940 4868 Pls
6268 4211 Pls
6608 4575 Pls
6889 4839 Pls
6902 4618 Pls
6858 4858 Pls
6939 4869 Pls
6298 3716 Pls
6867 4758 Pls
6791 4634 Pls
3967 4773 Pls
6907 4868 Pls
6628 4521 Pls
4726 3214 Pls
5752 2389 Pls
6833 4400 Pls
6640 4174 Pls
6804 4871 Pls
6441 3161 Pls
5793 3711 Pls
6912 4855 Pls
6896 4856 Pls
4940 1085 Pls
6730 4677 Pls
6749 4580 Pls
6719 4803 Pls
5858 4758 Pls
6861 4599 Pls
6941 4693 Pls
6936 4565 Pls
6504 4830 Pls
6737 4806 Pls
6398 4717 Pls
6752 4636 Pls
6854 4793 Pls
6228 4814 Pls
6569 4593 Pls
6745 4810 Pls
6946 4862 Pls
6442 4645 Pls
6864 4640 Pls
6860 4106 Pls
3446 1068 Pls
6824 4745 Pls
6939 4820 Pls
6944 4813 Pls
6535 1286 Pls
6837 4860 Pls
6664 4620 Pls
6796 4717 Pls
6626 4702 Pls
6892 4322 Pls
6864 4795 Pls
6833 4816 Pls
6916 4853 Pls
6915 4767 Pls
5595 3765 Pls
6857 4837 Pls
6896 4858 Pls
6506 4807 Pls
6903 4844 Pls
6623 4647 Pls
6411 4460 Pls
6868 4824 Pls
3811 4328 Pls
6879 4829 Pls
6843 4620 Pls
6010 3938 Pls
6777 4831 Pls
6710 4860 Pls
6904 4853 Pls
6902 4857 Pls
6943 4869 Pls
6884 4807 Pls
2901 452 Pls
6256 4189 Pls
6920 4868 Pls
6914 4809 Pls
5812 4784 Pls
6231 4761 Pls
6332 4184 Pls
6923 4648 Pls
6848 4811 Pls
6769 3771 Pls
6925 4859 Pls
6611 4647 Pls
6887 4860 Pls
6802 4722 Pls
2614 2946 Pls
6197 4622 Pls
1419 1142 Pls
6821 4834 Pls
5200 3798 Pls
6300 3645 Pls
6852 4856 Pls
6913 4846 Pls
6919 4865 Pls
6923 4796 Pls
6613 4858 Pls
6637 4496 Pls
6889 4841 Pls
6943 4840 Pls
6878 4772 Pls
6879 4816 Pls
3297 489 Pls
6888 4484 Pls
6889 4767 Pls
6779 4692 Pls
5095 1496 Pls
6859 3040 Pls
6745 4355 Pls
6635 4820 Pls
2597 552 Pls
6734 4685 Pls
6933 4846 Pls
6925 4855 Pls
6763 4714 Pls
6944 4839 Pls
6746 2355 Pls
6930 4864 Pls
6911 4868 Pls
6700 4529 Pls
6837 4618 Pls
6254 4601 Pls
6830 4828 Pls
6732 4306 Pls
6943 4871 Pls
6519 4771 Pls
6826 4820 Pls
5999 4434 Pls
6834 4665 Pls
6932 4806 Pls
6902 4608 Pls
6746 4828 Pls
6760 4726 Pls
6824 4797 Pls
6617 4765 Pls
6819 4715 Pls
1526 376 Pls
6947 4868 Pls
6834 4792 Pls
6938 4641 Pls
6838 4740 Pls
5838 4721 Pls
5335 3371 Pls
6928 4868 Pls
3345 3861 Pls
6739 4805 Pls
6883 4853 Pls
6940 4848 Pls
6463 4837 Pls
6939 4846 Pls
6797 4723 Pls
6619 556 Pls
6831 4804 Pls
6241 3413 Pls
6788 3441 Pls
6287 4605 Pls
4369 4384 Pls
6430 4306 Pls
6909 4856 Pls
6556 4819 Pls
6183 4710 Pls
6654 4403 Pls
5598 1569 Pls
5132 4835 Pls
6909 4863 Pls
4633 4556 Pls
6934 4852 Pls
4313 3173 Pls
4082 1294 Pls
6945 4808 Pls
6662 4657 Pls
6910 4817 Pls
6822 4838 Pls
6128 4844 Pls
6695 4199 Pls
6918 4686 Pls
6827 4802 Pls
6909 4865 Pls
6783 4620 Pls
6811 4848 Pls
4789 4507 Pls
3160 3493 Pls
6774 4107 Pls
6742 3804 Pls
4253 634 Pls
6878 4768 Pls
5542 2494 Pls
6599 4594 Pls
6762 4075 Pls
6925 4858 Pls
5578 3780 Pls
5165 3951 Pls
6936 4870 Pls
6880 4826 Pls
6508 4862 Pls
6922 4852 Pls
6779 4784 Pls
6943 4858 Pls
6615 4758 Pls
6814 4784 Pls
5002 1994 Pls
6611 3962 Pls
6935 4860 Pls
6877 4839 Pls
6337 3954 Pls
6886 4869 Pls
6620 4494 Pls
6744 4811 Pls
6945 4833 Pls
844 1612 Pls
6420 4779 Pls
6931 4868 Pls
5807 4438 Pls
6619 4615 Pls
6217 4847 Pls
6719 4866 Pls
6830 4751 Pls
5026 2109 Pls
6554 4743 Pls
3275 1140 Pls
6394 3896 Pls
6815 4760 Pls
6559 4169 Pls
6323 3988 Pls
6901 4804 Pls
6853 4517 Pls
6834 4854 Pls
6330 4663 Pls
6928 4848 Pls
6531 4852 Pls
6944 4869 Pls
6854 4736 Pls
4037 4077 Pls
6336 4662 Pls
6912 4817 Pls
6698 3724 Pls
6816 4619 Pls
6816 4779 Pls
6146 2979 Pls
6905 4861 Pls
6942 4828 Pls
6872 4827 Pls
6738 4806 Pls
6564 4865 Pls
2892 3677 Pls
6727 4518 Pls
6716 4840 Pls
6613 4566 Pls
6647 4533 Pls
6901 4854 Pls
6552 4669 Pls
5879 4451 Pls
5533 545 Pls
6922 4856 Pls
6654 4864 Pls
3311 4857 Pls
6360 4579 Pls
6837 4672 Pls
6855 4840 Pls
6870 4750 Pls
6683 4724 Pls
6939 4826 Pls
6888 4848 Pls
6825 4645 Pls
6257 4682 Pls
6912 4224 Pls
6905 4797 Pls
2740 1565 Pls
6782 4871 Pls
6771 4737 Pls
6936 4800 Pls
1859 2060 Pls
6881 4871 Pls
6079 4697 Pls
6809 4607 Pls
6598 4334 Pls
4307 2351 Pls
6807 4677 Pls
6603 4849 Pls
6942 4870 Pls
3513 1453 Pls
6929 4765 Pls
6353 4645 Pls
6863 4770 Pls
5366 4303 Pls
6928 4423 Pls
6943 4860 Pls
6771 4781 Pls
6662 4162 Pls
6740 4852 Pls
6945 4821 Pls
6520 4484 Pls
6944 4854 Pls
6768 4829 Pls
6659 4757 Pls
6374 4674 Pls
6150 4604 Pls
6907 4853 Pls
6385 4007 Pls
6913 4810 Pls
6841 4820 Pls
6868 4809 Pls
6875 4792 Pls
6667 4639 Pls
6178 4029 Pls
5956 3852 Pls
6917 4838 Pls
6856 4851 Pls
1732 1182 Pls
6886 4715 Pls
6928 4757 Pls
856 4751 Pls
5138 2798 Pls
6391 2545 Pls
5776 4396 Pls
6676 4358 Pls
5126 4587 Pls
6903 4856 Pls
3837 4537 Pls
6902 4867 Pls
6041 4141 Pls
6875 4793 Pls
6909 4869 Pls
6689 4804 Pls
6658 4857 Pls
6791 4781 Pls
6838 4862 Pls
6513 4768 Pls
6900 4863 Pls
6937 4860 Pls
6854 4827 Pls
6302 4621 Pls
6749 4261 Pls
6912 4842 Pls
6878 4861 Pls
4032 3724 Pls
6734 4831 Pls
846 4385 Pls
6744 3860 Pls
6633 4580 Pls
6370 4778 Pls
6825 4814 Pls
6291 4163 Pls
6904 4858 Pls
6907 4828 Pls
5615 3884 Pls
6917 4833 Pls
6922 4734 Pls
6387 4583 Pls
4558 2876 Pls
6489 3495 Pls
1088 1502 Pls
6945 4867 Pls
5061 1311 Pls
763 4429 Pls
6917 4842 Pls
6943 4852 Pls
6484 4192 Pls
6939 4870 Pls
5834 4579 Pls
6235 3946 Pls
6794 4496 Pls
6652 4567 Pls
6931 4844 Pls
6702 4664 Pls
6195 4809 Pls
6605 4727 Pls
6811 4816 Pls
6798 4856 Pls
6752 4637 Pls
6905 4759 Pls
6557 4023 Pls
4840 4419 Pls
6894 4752 Pls
6777 4799 Pls
6923 4870 Pls
2642 763 Pls
5900 4196 Pls
6903 4532 Pls
6920 4857 Pls
6944 4846 Pls
6700 4825 Pls
6941 4870 Pls
6768 4753 Pls
6881 4864 Pls
6531 4778 Pls
6568 4670 Pls
6942 4866 Pls
6636 3620 Pls
6864 4838 Pls
5833 2974 Pls
6733 4663 Pls
6158 3785 Pls
6903 4869 Pls
6530 660 Pls
6906 4859 Pls
6899 4845 Pls
6522 4358 Pls
% End plot #1
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica

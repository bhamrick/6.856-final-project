%!PS-Adobe-2.0 EPSF-2.0
%%Title: gaussian_5000_sphere100_cold.eps
%%Creator: gnuplot 4.4 patchlevel 2 (Gentoo revision r1)
%%CreationDate: Fri May  6 01:05:15 2011
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (gaussian_5000_sphere100_cold.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 2 (Gentoo revision r1))
  /Author (bhamrick)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri May  6 01:05:15 2011)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {Gshow} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} def
/Gswidth {dup type /stringtype eq {stringwidth} {pop (n) stringwidth} ifelse} def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get Gswidth pop add} {pop} ifelse} ifelse} forall} def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
546 280 M
63 0 V
6338 0 R
-63 0 V
stroke
462 280 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.3)]
] -46.7 MRshow
1.000 UL
LTb
546 1045 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1045 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MRshow
1.000 UL
LTb
546 1810 M
63 0 V
6338 0 R
-63 0 V
stroke
462 1810 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.1)]
] -46.7 MRshow
1.000 UL
LTb
546 2576 M
63 0 V
6338 0 R
-63 0 V
stroke
462 2576 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MRshow
1.000 UL
LTb
546 3341 M
63 0 V
6338 0 R
-63 0 V
stroke
462 3341 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.1)]
] -46.7 MRshow
1.000 UL
LTb
546 4106 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4106 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MRshow
1.000 UL
LTb
546 4871 M
63 0 V
6338 0 R
-63 0 V
stroke
462 4871 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.3)]
] -46.7 MRshow
1.000 UL
LTb
546 280 M
0 63 V
0 4528 R
0 -63 V
stroke
546 140 M
[ [(Helvetica) 140.0 0.0 true true 0 (-0.2)]
] -46.7 MCshow
1.000 UL
LTb
1613 280 M
0 63 V
0 4528 R
0 -63 V
stroke
1613 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0)]
] -46.7 MCshow
1.000 UL
LTb
2680 280 M
0 63 V
0 4528 R
0 -63 V
stroke
2680 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.2)]
] -46.7 MCshow
1.000 UL
LTb
3747 280 M
0 63 V
0 4528 R
0 -63 V
stroke
3747 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.4)]
] -46.7 MCshow
1.000 UL
LTb
4813 280 M
0 63 V
0 4528 R
0 -63 V
stroke
4813 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.6)]
] -46.7 MCshow
1.000 UL
LTb
5880 280 M
0 63 V
0 4528 R
0 -63 V
stroke
5880 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 0.8)]
] -46.7 MCshow
1.000 UL
LTb
6947 280 M
0 63 V
0 4528 R
0 -63 V
stroke
6947 140 M
[ [(Helvetica) 140.0 0.0 true true 0 ( 1)]
] -46.7 MCshow
1.000 UL
LTb
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
% Begin plot #1
1.000 UP
1.000 UL
LT0
/Helvetica findfont 140 scalefont setfont
4982 2823 Pls
6946 2576 Pls
4760 2824 Pls
6946 2576 Pls
6946 2576 Pls
3953 3083 Pls
6946 2576 Pls
6946 2576 Pls
3383 4361 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
5538 2559 Pls
6946 2576 Pls
6946 2576 Pls
5392 2562 Pls
6946 2576 Pls
6946 2576 Pls
4569 2493 Pls
3593 2557 Pls
5515 3374 Pls
5365 2145 Pls
5009 2655 Pls
4284 2697 Pls
6946 2576 Pls
3681 1326 Pls
1873 1121 Pls
5549 2416 Pls
4583 2030 Pls
3137 2564 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
4528 3828 Pls
6946 2576 Pls
5398 2460 Pls
6946 2576 Pls
5179 3124 Pls
6033 2045 Pls
5083 3191 Pls
6946 2576 Pls
6946 2576 Pls
3198 1027 Pls
5775 1881 Pls
5966 3568 Pls
2809 3335 Pls
6946 2576 Pls
2965 3009 Pls
5893 2965 Pls
4978 2133 Pls
6946 2576 Pls
6946 2576 Pls
3067 2266 Pls
6946 2576 Pls
5851 2626 Pls
4518 4420 Pls
4710 2565 Pls
5595 2766 Pls
4080 3146 Pls
5065 1777 Pls
6946 2576 Pls
5688 2098 Pls
5132 2456 Pls
5919 2797 Pls
2832 1680 Pls
4701 2921 Pls
3661 2604 Pls
6946 2576 Pls
5888 2624 Pls
4265 2171 Pls
6946 2576 Pls
6946 2576 Pls
4833 1896 Pls
2725 2561 Pls
6946 2576 Pls
5491 3340 Pls
5768 3062 Pls
4608 2510 Pls
5827 3122 Pls
4489 2606 Pls
4292 3826 Pls
2933 3073 Pls
5695 3192 Pls
3527 2706 Pls
4480 3072 Pls
5852 1858 Pls
3778 3382 Pls
5476 2375 Pls
6946 2576 Pls
4385 2582 Pls
3843 2333 Pls
4408 2485 Pls
6946 2576 Pls
4886 2945 Pls
3048 3047 Pls
5896 1918 Pls
6946 2576 Pls
5656 2307 Pls
3517 3520 Pls
6946 2576 Pls
3665 2876 Pls
6946 2576 Pls
5913 2649 Pls
5036 3893 Pls
1826 2313 Pls
5798 3032 Pls
5126 2561 Pls
6946 2576 Pls
4990 2902 Pls
3823 1630 Pls
6946 2576 Pls
6946 2576 Pls
4245 2887 Pls
6946 2576 Pls
2806 3175 Pls
4964 1395 Pls
3087 1212 Pls
5811 2919 Pls
4314 3084 Pls
4202 3422 Pls
6946 2576 Pls
5571 2372 Pls
4802 3669 Pls
4903 2064 Pls
4353 3110 Pls
6946 2576 Pls
3220 1692 Pls
4620 2130 Pls
4426 2175 Pls
4758 2637 Pls
5671 2738 Pls
3872 1910 Pls
3227 1861 Pls
4759 2023 Pls
4924 2337 Pls
4348 2764 Pls
6946 2576 Pls
4499 3783 Pls
3250 3018 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
4703 2285 Pls
3656 2686 Pls
3032 2580 Pls
5929 2229 Pls
5723 2449 Pls
3852 1961 Pls
6946 2576 Pls
3627 3754 Pls
2579 2638 Pls
6028 2366 Pls
5371 2163 Pls
4754 1581 Pls
5089 2399 Pls
1912 3186 Pls
4528 2634 Pls
5791 1661 Pls
5915 2566 Pls
5089 2587 Pls
4280 2416 Pls
5775 2711 Pls
3374 2284 Pls
6946 2576 Pls
6946 2576 Pls
4816 1971 Pls
2613 4067 Pls
5953 2428 Pls
5664 2222 Pls
4684 1813 Pls
4273 3514 Pls
6946 2576 Pls
5671 3023 Pls
5787 2400 Pls
5386 2057 Pls
6946 2576 Pls
5645 2078 Pls
6946 2576 Pls
4557 2757 Pls
5025 2490 Pls
4023 2520 Pls
5708 2734 Pls
6946 2576 Pls
5377 2198 Pls
3243 3989 Pls
6946 2576 Pls
5654 2065 Pls
6946 2576 Pls
5947 1698 Pls
6946 2576 Pls
5035 2657 Pls
6946 2576 Pls
3131 2207 Pls
4058 2370 Pls
3050 3176 Pls
6946 2576 Pls
4613 3548 Pls
6946 2576 Pls
4544 3924 Pls
5679 3688 Pls
5177 2388 Pls
4166 839 Pls
4452 2537 Pls
6946 2576 Pls
4560 3134 Pls
5692 2411 Pls
5076 3210 Pls
6946 2576 Pls
4089 3369 Pls
4206 1495 Pls
6946 2576 Pls
4924 3009 Pls
6946 2576 Pls
5977 2154 Pls
4687 1540 Pls
4264 2048 Pls
5662 1640 Pls
5801 1982 Pls
5801 2864 Pls
5724 2166 Pls
5563 3026 Pls
6946 2576 Pls
6946 2576 Pls
3702 3059 Pls
5354 2515 Pls
4988 3539 Pls
6946 2576 Pls
5345 1726 Pls
3595 2004 Pls
3637 2320 Pls
6946 2576 Pls
4629 1539 Pls
3376 2315 Pls
4732 1784 Pls
3181 4562 Pls
6946 2576 Pls
6946 2576 Pls
4054 2142 Pls
6946 2576 Pls
6946 2576 Pls
3386 3079 Pls
5491 2709 Pls
5793 2288 Pls
2478 3346 Pls
4809 3575 Pls
5896 2099 Pls
3313 3595 Pls
3889 3282 Pls
5580 2570 Pls
6946 2576 Pls
5731 2855 Pls
6946 2576 Pls
4341 3324 Pls
5942 2812 Pls
6946 2576 Pls
6946 2576 Pls
3885 3389 Pls
5149 2551 Pls
6946 2576 Pls
4856 2450 Pls
4633 3200 Pls
6946 2576 Pls
3886 3509 Pls
3840 3464 Pls
6946 2576 Pls
4743 1799 Pls
5748 1818 Pls
4739 2109 Pls
4326 2340 Pls
6946 2576 Pls
3588 2653 Pls
5890 2520 Pls
4179 643 Pls
5664 2405 Pls
4363 3274 Pls
5823 2617 Pls
5726 2263 Pls
5730 2443 Pls
6946 2576 Pls
4901 2317 Pls
6039 2925 Pls
5619 3331 Pls
6946 2576 Pls
4038 1255 Pls
3442 3381 Pls
6946 2576 Pls
5368 2050 Pls
4824 2630 Pls
4919 1525 Pls
4088 3214 Pls
5981 2432 Pls
5236 3385 Pls
6946 2576 Pls
6946 2576 Pls
4745 3096 Pls
3158 2869 Pls
4986 2794 Pls
6946 2576 Pls
4588 1644 Pls
4539 2792 Pls
4858 2845 Pls
6946 2576 Pls
5381 2859 Pls
5587 3018 Pls
3553 3394 Pls
6946 2576 Pls
5607 2422 Pls
6946 2576 Pls
6946 2576 Pls
5571 2765 Pls
4330 2774 Pls
4073 1535 Pls
6946 2576 Pls
5660 2732 Pls
3632 1474 Pls
4230 2023 Pls
3770 2092 Pls
5887 2397 Pls
3551 2814 Pls
4025 2705 Pls
4139 3732 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
4181 2790 Pls
6098 2782 Pls
6946 2576 Pls
5637 3611 Pls
6946 2576 Pls
4490 3339 Pls
6946 2576 Pls
4735 3193 Pls
4333 2722 Pls
3765 1858 Pls
6946 2576 Pls
6946 2576 Pls
4687 2647 Pls
6946 2576 Pls
2848 2505 Pls
6946 2576 Pls
3939 2375 Pls
6946 2576 Pls
3777 2722 Pls
6946 2576 Pls
6946 2576 Pls
5457 2064 Pls
2922 2010 Pls
3003 2180 Pls
6946 2576 Pls
5688 2593 Pls
4243 1548 Pls
6946 2576 Pls
6946 2576 Pls
3434 2088 Pls
4322 3061 Pls
5739 2377 Pls
4482 2377 Pls
6946 2576 Pls
5298 2391 Pls
5155 2425 Pls
5883 3235 Pls
5302 2016 Pls
5023 2121 Pls
3503 3104 Pls
6946 2576 Pls
5557 2943 Pls
6946 2576 Pls
6946 2576 Pls
5891 2531 Pls
5844 2511 Pls
5682 2994 Pls
6946 2576 Pls
4676 3010 Pls
6946 2576 Pls
3123 2235 Pls
5497 3613 Pls
3244 2893 Pls
3988 3007 Pls
4966 1624 Pls
3300 1907 Pls
6946 2576 Pls
5623 2444 Pls
6946 2576 Pls
6946 2576 Pls
4124 3115 Pls
3043 3485 Pls
5335 3853 Pls
4697 3244 Pls
6946 2576 Pls
4605 1519 Pls
3776 3156 Pls
5730 1920 Pls
3841 2175 Pls
4679 2340 Pls
3901 2524 Pls
5876 2964 Pls
4859 2202 Pls
4589 3291 Pls
5005 3209 Pls
5742 2256 Pls
6946 2576 Pls
3851 3120 Pls
5669 2202 Pls
6946 2576 Pls
4049 2165 Pls
6946 2576 Pls
5752 2910 Pls
5338 2281 Pls
2437 3365 Pls
3334 2265 Pls
4620 2116 Pls
3646 1832 Pls
6946 2576 Pls
6946 2576 Pls
5894 2162 Pls
3575 2753 Pls
2461 2490 Pls
6946 2576 Pls
4746 2381 Pls
5701 3057 Pls
6946 2576 Pls
5698 2402 Pls
4867 2663 Pls
3326 3166 Pls
5894 2520 Pls
6946 2576 Pls
6946 2576 Pls
5878 2708 Pls
6099 2936 Pls
1500 1942 Pls
6946 2576 Pls
4712 2093 Pls
5953 3367 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
3264 4304 Pls
6946 2576 Pls
6946 2576 Pls
4054 2588 Pls
3097 2203 Pls
6946 2576 Pls
6946 2576 Pls
5762 2525 Pls
6946 2576 Pls
3373 2719 Pls
5726 2981 Pls
6946 2576 Pls
3749 2592 Pls
5778 2363 Pls
5640 1774 Pls
5984 3141 Pls
5187 2919 Pls
5424 2675 Pls
6002 2398 Pls
5599 3220 Pls
4721 2070 Pls
6946 2576 Pls
6946 2576 Pls
4911 3873 Pls
4840 1246 Pls
6946 2576 Pls
4317 3061 Pls
5100 3492 Pls
4210 2293 Pls
5867 2860 Pls
6946 2576 Pls
4034 1745 Pls
4623 3052 Pls
3572 3237 Pls
6946 2576 Pls
5285 1801 Pls
6946 2576 Pls
6946 2576 Pls
4868 3138 Pls
6946 2576 Pls
4946 2698 Pls
5812 3328 Pls
6946 2576 Pls
6946 2576 Pls
3544 2031 Pls
5740 1873 Pls
5810 2046 Pls
4875 2693 Pls
5242 1814 Pls
5592 2751 Pls
6946 2576 Pls
5799 3542 Pls
5859 2373 Pls
4352 3008 Pls
3846 2273 Pls
6946 2576 Pls
2820 1834 Pls
4050 2952 Pls
6946 2576 Pls
3371 1601 Pls
4519 2847 Pls
6946 2576 Pls
6946 2576 Pls
5920 2992 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
3881 2807 Pls
3798 2750 Pls
5650 2837 Pls
4870 1931 Pls
4149 1304 Pls
3813 3981 Pls
6946 2576 Pls
5677 3170 Pls
6946 2576 Pls
4826 2821 Pls
6199 3261 Pls
4242 2347 Pls
6946 2576 Pls
5683 2417 Pls
5799 2720 Pls
6946 2576 Pls
3327 3395 Pls
4008 2822 Pls
5643 3064 Pls
4763 1214 Pls
6946 2576 Pls
5803 2235 Pls
4595 3636 Pls
6946 2576 Pls
5658 2426 Pls
5499 3227 Pls
4732 1312 Pls
4491 2364 Pls
6946 2576 Pls
4141 2705 Pls
4520 1854 Pls
6946 2576 Pls
5716 2329 Pls
6946 2576 Pls
4764 1996 Pls
6946 2576 Pls
6946 2576 Pls
5924 2553 Pls
6946 2576 Pls
4242 1746 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
5515 3943 Pls
6946 2576 Pls
4443 1038 Pls
3608 3617 Pls
5922 1542 Pls
3885 1495 Pls
3668 3449 Pls
5650 1678 Pls
3509 2596 Pls
3218 2152 Pls
6946 2576 Pls
5248 2385 Pls
5641 2705 Pls
6946 2576 Pls
4007 1294 Pls
5833 1646 Pls
4949 2259 Pls
6946 2576 Pls
5903 2387 Pls
4551 1968 Pls
6946 2576 Pls
3131 998 Pls
5767 2463 Pls
4681 2653 Pls
3238 2561 Pls
5373 2464 Pls
5702 2474 Pls
4839 3315 Pls
2631 2423 Pls
6946 2576 Pls
6946 2576 Pls
4055 2472 Pls
4470 3401 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
5624 1978 Pls
2282 1983 Pls
4750 3749 Pls
5481 2277 Pls
2987 397 Pls
4742 2216 Pls
5925 2248 Pls
6946 2576 Pls
5550 2241 Pls
6946 2576 Pls
5843 3490 Pls
5980 1957 Pls
3820 2311 Pls
5218 2161 Pls
6946 2576 Pls
5513 2710 Pls
3210 2898 Pls
5110 2217 Pls
4617 1661 Pls
4180 2413 Pls
4702 2629 Pls
5743 3029 Pls
4949 2052 Pls
5705 2147 Pls
5066 2347 Pls
6946 2576 Pls
5252 3328 Pls
6946 2576 Pls
6946 2576 Pls
5723 2471 Pls
3060 3759 Pls
2540 3236 Pls
5351 2661 Pls
3497 3738 Pls
3951 2938 Pls
5825 2181 Pls
5751 2985 Pls
5747 2650 Pls
5713 2693 Pls
5724 2849 Pls
3853 1674 Pls
4401 2644 Pls
6946 2576 Pls
2443 1998 Pls
6946 2576 Pls
3955 2428 Pls
6946 2576 Pls
6946 2576 Pls
5917 2401 Pls
5807 1610 Pls
5945 2873 Pls
3472 1886 Pls
5084 3588 Pls
3964 3008 Pls
6946 2576 Pls
3864 2328 Pls
3724 2314 Pls
2894 3072 Pls
5965 2319 Pls
6946 2576 Pls
6946 2576 Pls
4195 2270 Pls
6946 2576 Pls
4676 3051 Pls
6946 2576 Pls
6946 2576 Pls
5737 2271 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
4584 2004 Pls
6946 2576 Pls
5036 1124 Pls
3788 2653 Pls
3990 2447 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
5635 2162 Pls
3782 1586 Pls
6946 2576 Pls
5066 1921 Pls
5526 2989 Pls
6946 2576 Pls
4544 2699 Pls
4011 2064 Pls
2676 2099 Pls
6032 1997 Pls
3966 3498 Pls
4482 1793 Pls
6946 2576 Pls
2946 2779 Pls
2708 3179 Pls
4585 905 Pls
3053 2414 Pls
6946 2576 Pls
6946 2576 Pls
4310 1864 Pls
3496 2713 Pls
5751 2645 Pls
4341 3550 Pls
3658 3339 Pls
4781 2633 Pls
6946 2576 Pls
6946 2576 Pls
4284 2282 Pls
4468 3009 Pls
3811 2970 Pls
3648 1532 Pls
5077 2754 Pls
3780 2612 Pls
4570 3256 Pls
4371 1337 Pls
5665 2975 Pls
2816 2911 Pls
5888 2331 Pls
4257 968 Pls
6060 3172 Pls
5954 2643 Pls
3033 2102 Pls
4648 3692 Pls
5075 3212 Pls
4472 1766 Pls
4107 2230 Pls
4053 2885 Pls
4497 2146 Pls
3621 1441 Pls
5756 2706 Pls
6946 2576 Pls
3376 1200 Pls
4254 2952 Pls
4504 2070 Pls
3151 3638 Pls
5707 2708 Pls
6020 2453 Pls
5833 2436 Pls
6946 2576 Pls
6946 2576 Pls
5902 3149 Pls
4662 2848 Pls
6946 2576 Pls
1749 1522 Pls
6946 2576 Pls
4183 3095 Pls
4437 3035 Pls
4299 3008 Pls
4458 3314 Pls
3981 2741 Pls
6946 2576 Pls
3853 3706 Pls
3311 2616 Pls
5945 1661 Pls
4939 3482 Pls
2866 2469 Pls
4787 1840 Pls
3713 1961 Pls
4231 2082 Pls
6946 2576 Pls
2258 3884 Pls
3844 2445 Pls
1676 1853 Pls
4551 2033 Pls
3256 2219 Pls
4634 2205 Pls
5790 2404 Pls
1667 3596 Pls
4251 2051 Pls
5829 2351 Pls
3755 2430 Pls
4305 3003 Pls
6946 2576 Pls
3915 2200 Pls
4011 2248 Pls
4207 3421 Pls
6946 2576 Pls
6946 2576 Pls
4872 2223 Pls
4952 3254 Pls
5126 3198 Pls
3271 1720 Pls
6101 1318 Pls
6946 2576 Pls
6009 1955 Pls
4360 2274 Pls
3856 2817 Pls
3930 2403 Pls
5164 2392 Pls
6946 2576 Pls
4082 1697 Pls
3528 2631 Pls
6946 2576 Pls
4927 2003 Pls
5820 3298 Pls
3939 1562 Pls
2657 2478 Pls
5874 3185 Pls
5799 1831 Pls
4816 2839 Pls
2797 2584 Pls
4668 1275 Pls
6946 2576 Pls
4919 3346 Pls
6946 2576 Pls
5680 2598 Pls
3861 3025 Pls
4934 2495 Pls
3751 2175 Pls
6946 2576 Pls
6946 2576 Pls
4629 2204 Pls
5597 2003 Pls
3169 2684 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
3380 2930 Pls
5903 3193 Pls
5058 3367 Pls
5154 2303 Pls
6946 2576 Pls
4354 2113 Pls
4647 2811 Pls
4784 2803 Pls
6946 2576 Pls
5667 2544 Pls
3861 2284 Pls
3633 1486 Pls
4017 2841 Pls
6946 2576 Pls
5706 2476 Pls
5465 1448 Pls
5021 1893 Pls
5733 2844 Pls
6946 2576 Pls
5677 3115 Pls
6946 2576 Pls
5521 1825 Pls
4899 2437 Pls
3217 3643 Pls
4565 3019 Pls
6946 2576 Pls
5878 3367 Pls
3626 2116 Pls
4392 3755 Pls
4025 849 Pls
4560 1314 Pls
6946 2576 Pls
4767 2292 Pls
5121 1159 Pls
2841 1546 Pls
4700 2562 Pls
6946 2576 Pls
6946 2576 Pls
5354 2435 Pls
5686 2357 Pls
4026 2651 Pls
6946 2576 Pls
6946 2576 Pls
4793 2099 Pls
5634 2689 Pls
5814 2300 Pls
5581 2364 Pls
6946 2576 Pls
2266 481 Pls
3408 2820 Pls
5746 3318 Pls
4788 2307 Pls
4446 1707 Pls
6946 2576 Pls
5938 2630 Pls
6946 2576 Pls
5732 2764 Pls
1999 2814 Pls
5730 2791 Pls
4572 2263 Pls
5177 2760 Pls
3752 4113 Pls
6946 2576 Pls
5959 2524 Pls
6946 2576 Pls
3601 3079 Pls
5368 2812 Pls
4275 2817 Pls
6946 2576 Pls
4026 3918 Pls
3917 2035 Pls
3315 3268 Pls
5795 3361 Pls
2939 2090 Pls
2945 2005 Pls
6946 2576 Pls
4837 2646 Pls
5691 3402 Pls
2555 2851 Pls
5640 2872 Pls
5916 2697 Pls
5894 3123 Pls
5095 2816 Pls
3651 3154 Pls
5020 2730 Pls
3760 2145 Pls
3046 1435 Pls
6946 2576 Pls
4854 2205 Pls
6946 2576 Pls
2026 2630 Pls
4311 3575 Pls
5105 3111 Pls
4273 3253 Pls
4921 2665 Pls
6946 2576 Pls
6946 2576 Pls
4180 1993 Pls
4544 2638 Pls
5572 1836 Pls
5343 2978 Pls
5528 1889 Pls
5906 2225 Pls
3795 1309 Pls
4041 3168 Pls
3618 3072 Pls
6946 2576 Pls
5832 2688 Pls
3253 2820 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
4695 2024 Pls
3937 1952 Pls
5747 2383 Pls
4639 2873 Pls
4064 804 Pls
5971 3077 Pls
5103 2781 Pls
4990 2299 Pls
4630 1424 Pls
6946 2576 Pls
5923 1652 Pls
2721 3014 Pls
5928 2518 Pls
4881 2638 Pls
3231 1643 Pls
5736 2356 Pls
4943 3491 Pls
5830 2912 Pls
5379 2730 Pls
5186 2958 Pls
5669 2270 Pls
5550 2784 Pls
6946 2576 Pls
6946 2576 Pls
6946 2576 Pls
5014 3071 Pls
5850 2257 Pls
4352 2328 Pls
5993 3669 Pls
4686 3080 Pls
6946 2576 Pls
4661 2569 Pls
4855 3029 Pls
4788 2313 Pls
6946 2576 Pls
3705 3707 Pls
4133 1830 Pls
3711 3577 Pls
5838 3012 Pls
6946 2576 Pls
4616 2147 Pls
3449 1680 Pls
5871 3202 Pls
4991 2343 Pls
6946 2576 Pls
5065 2695 Pls
3728 2055 Pls
5501 1319 Pls
3419 1324 Pls
6946 2576 Pls
4668 1549 Pls
5855 2524 Pls
5798 2573 Pls
6946 2576 Pls
4151 3556 Pls
5612 2624 Pls
5698 2152 Pls
6946 2576 Pls
6946 2576 Pls
3377 1660 Pls
6946 2576 Pls
5006 2658 Pls
2685 4221 Pls
5438 2232 Pls
5653 2712 Pls
6185 2552 Pls
2841 2490 Pls
6946 2576 Pls
4674 2735 Pls
4073 2634 Pls
4653 2319 Pls
5555 2690 Pls
3131 2013 Pls
3239 1669 Pls
5991 2679 Pls
5739 2836 Pls
6946 2576 Pls
5486 2643 Pls
4068 2275 Pls
3612 2954 Pls
% End plot #1
1.000 UL
LTb
546 4871 N
546 280 L
6401 0 V
0 4591 V
-6401 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
